{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","React","memo","total","perPage","currentPage","onPageChange","countOfPages","Math","ceil","pageList","prevButtonIsDisabled","nextButtonIsDisabled","className","classNames","disabled","href","onClick","map","pageNumber","active","items","App","useState","setPerPage","setCurrentPage","useMemo","length","firstPageItemIndex","lastPageItemIndex","visibleItems","slice","handleChange","useCallback","event","Number","target","value","id","onChange","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAAwBC,IAAMC,MACzC,YAKO,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAeC,KAAKC,KAAKN,EAAQC,GAEjCM,EAAWhB,EAAW,EAAGa,GAEzBI,EAAuC,IAAhBN,EAEvBO,EAAuBP,IAAgBE,EAE7C,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACFN,GACHL,EAAaD,EAAc,IAPjC,oBAeDK,EAASQ,KAAI,SAAAC,GAAU,OACtB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAAed,IAH7B,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHZ,IAAgBc,GAClBb,EAAaa,IANnB,SAUGA,KAZEA,MAgBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WACFL,GACHN,EAAaD,EAAc,IAPjC,0BCrEJgB,EAAQ3B,EAAW,EAAG,IACzBwB,KAAI,SAAApB,GAAC,qBAAYA,MAEPwB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KAEMtB,EAAQuB,mBAAQ,kBAAML,EAAMM,SAAQ,IAEpCC,EAAqBF,mBAAQ,WACjC,OAAOtB,EAAUC,EAAcD,IAC9B,CAACA,EAASC,IAEPwB,EAAoBH,mBAAQ,WAChC,OAAOtB,EAAUC,EAAcF,EAC3BA,EACAC,EAAUC,IACb,CAACD,EAASC,IAEPyB,EAAeJ,mBAAQ,WAC3B,OAAOL,EAAMU,MAAMH,EAAoBC,KACtC,CAACzB,EAASC,IAEP2B,EAAeC,uBACnB,SAACC,GACCV,EAAWW,OAAOD,EAAME,OAAOC,QAC/BZ,EAAe,KACd,IAGL,OACE,sBAAKZ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EAAqB,EADtD,cAC6DC,EAD7D,eACqF1B,EADrF,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACVwB,MAAOjC,EACPmC,SAAUP,EALZ,UAOE,wBAAQK,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOG,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAACb,EAAD,CACEG,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcmB,IAEhB,6BACGK,EAAaZ,KAAI,SAAAuB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCtElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7aeaffcd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: FC<Props> = React.memo(\n  ({\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  }) => {\n    const countOfPages = Math.ceil(total / perPage);\n\n    const pageList = getNumbers(1, countOfPages);\n\n    const prevButtonIsDisabled = currentPage === 1;\n\n    const nextButtonIsDisabled = currentPage === countOfPages;\n\n    return (\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: prevButtonIsDisabled },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={prevButtonIsDisabled}\n            onClick={() => {\n              if (!prevButtonIsDisabled) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pageList.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: pageNumber === currentPage },\n            )}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => {\n                if (currentPage !== pageNumber) {\n                  onPageChange(pageNumber);\n                }\n              }}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: nextButtonIsDisabled },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={nextButtonIsDisabled}\n            onClick={() => {\n              if (!nextButtonIsDisabled) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    );\n  },\n);\n","import React, { useCallback, useMemo, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = useMemo(() => items.length, []);\n\n  const firstPageItemIndex = useMemo(() => {\n    return perPage * currentPage - perPage;\n  }, [perPage, currentPage]);\n\n  const lastPageItemIndex = useMemo(() => {\n    return perPage * currentPage > total\n      ? total\n      : perPage * currentPage;\n  }, [perPage, currentPage]);\n\n  const visibleItems = useMemo(() => {\n    return items.slice(firstPageItemIndex, lastPageItemIndex);\n  }, [perPage, currentPage]);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setPerPage(Number(event.target.value));\n      setCurrentPage(1);\n    }, [],\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstPageItemIndex + 1} - ${lastPageItemIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}